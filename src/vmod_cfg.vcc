#
# Copyright (c) 2016-2018 Carlos Abalde <carlos.abalde@gmail.com>
#
# You're free to use and distribute this under terms in the
# LICENSE file.
#

$Module cfg 3 CFG VMOD

DESCRIPTION
===========

VMOD useful to access to contents of environment variables and  local or remote
configuration files from VCL.

$Event event_function

$Object env()

Description
    Extracts existing environment variables and creates a new instance.

    Beware environment variables are internally cached. This cache is populated
    when creating a new instance and it's never refreshed.

$Method STRING .dump(BOOL stream=0)

Arguments
    stream: if enabled the JSON object will be streamed as a synthetic response.
Description
    Returns a string representation of a JSON object containing all variables.

    If called during ``vcl_synth`` or ``vcl_backend_error`` with the ``stream``
    argument enabled, this function will return an empty string and behave as
    a call to the ``synthetic`` VCL function with the JSON object as input.
    This highly reduces the amount of required workspace memory, specially for
    large JSON objects.

$Method BOOL .is_set(STRING name)

Arguments
    name: name of the environment variable.
Description
    Checks if an environment variable is set.

$Method STRING .get(STRING name, STRING fallback="")

Arguments
    name: name of the environment variable.

    fallback: value to be returned if the environment variable does not exist.
Description
    Gets the value of an environment variable.

$Object file(
    STRING location,
    INT period=60,
    INT curl_connection_timeout=0,
    INT curl_transfer_timeout=0,
    BOOL curl_ssl_verify_peer=0,
    BOOL curl_ssl_verify_host=0,
    STRING curl_ssl_cafile="",
    STRING curl_ssl_capath="",
    STRING curl_proxy="",
    ENUM { ini, json } format="ini",
    STRING name_delimiter=":",
    STRING value_delimiter=";")

Arguments
    location: path of the file. The following schemes are supported:
    ``file://``, ``http://`` and ``https://``. If not specified ``file://``
    is assumed.

    period: how frequently (seconds) contents of the file are reloaded (0 means
    disabling periodical reloads).

    curl_connection_timeout: connection timeout (milliseconds; 0 means no
    timeout).

    curl_transfer_timeout: transfer timeout (milliseconds; 0 means no timeout).

    curl_ssl_verify_peer: if enabled the peer's SSL certificate will be
    verified.

    curl_ssl_verify_host: if enabled the certificate's name will be verified
    against host.

    curl_ssl_cainfo: path to CA bundle (empty string means no CA bundle).

    curl_ssl_capath: directory holding CA certificates (empty string means no
    CA path).

    curl_proxy: HTTP proxy to be used (empty string means no proxy).

    format: format of the file.

    name_delimiter: delimiter to be used if flattening the keys namespace
    is required.

    value_delimiter: delimiter to be used if flattening a list of values is
    required. Beware the VMOD ignores JSON arrays.
Description
    Parses the file and creates a new instance.

    Beware contents of the file are internally cached. This cache is refreshed
    on every VCL WARM event received by the VMOD and every ``period`` seconds
    (if ``period`` > 0).

$Method BOOL .reload()

Description
    Reloads contents of the file. A ``False`` value is returned on failure.

$Method STRING .dump(BOOL stream=0)

Arguments
    stream: if enabled the JSON object will be streamed as a synthetic response.
Description
    Returns a string representation of a JSON object containing all variables.

    If called during ``vcl_synth`` or ``vcl_backend_error`` with the ``stream``
    argument enabled, this function will return an empty string and behave as
    a call to the ``synthetic`` VCL function with the JSON object as input.
    This highly reduces the amount of required workspace memory, specially for
    large JSON objects.

$Method BOOL .is_set(STRING name)

Arguments
    name: name of the -eventually flattened- key.
Description
    Checks if a key is set.

$Method STRING .get(STRING name, STRING fallback="")

Arguments
    name: name of the -eventually flattened- key.

    fallback: value to be returned if the key does not exist.
Description
    Gets the value of a key.

$Object rules(
    STRING location,
    INT period=60,
    INT curl_connection_timeout=0,
    INT curl_transfer_timeout=0,
    BOOL curl_ssl_verify_peer=0,
    BOOL curl_ssl_verify_host=0,
    STRING curl_ssl_cafile="",
    STRING curl_ssl_capath="",
    STRING curl_proxy="")

Description
    Parses the file and creates a new instance.

    See ``cfg.file()`` for details.

$Method STRING .get(STRING value, STRING fallback="")

Arguments
    value: value to be matched against the collection of rules.

    fallback: value to be returned if a match is not found.
Description
    Gets the result of executing the pattern matching logic.

$Method BOOL .reload()

Description
    Reloads contents of the file. A ``False`` value is returned on failure.
